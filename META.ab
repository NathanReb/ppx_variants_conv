version = "$(pkg_version)"
description = "Generation of accessor and iteration functions for ocaml variant types"
requires = "compiler-libs.common ppx_core ppx_driver ppx_type_conv"
requires(-ppx_driver)        += "variantslib"
requires(ppx_driver,toploop) += "variantslib"
archive(ppx_driver, byte  ) = "ppx_variants_conv.cma"
archive(ppx_driver, native) = "ppx_variants_conv.cmxa"
plugin(ppx_driver, byte  ) = "ppx_variants_conv.cma"
plugin(ppx_driver, native) = "ppx_variants_conv.cmxs"
exists_if = "ppx_variants_conv.cma"
ppxopt(-ppx_driver,-custom_ppx) = "ppx_deriving,package:ppx_variants_conv"
